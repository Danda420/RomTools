#!/bin/bash

USER=danda
DIRTOOLS=/home/$USER/Desktop
DIRIN=$DIRTOOLS/RomTools/rom_input
DIROUT=$DIRTOOLS/RomTools/rom_output
DIRSUPER=$DIRTOOLS/RomTools/ROM/super

SLOT=_a
SLOT1=_b

SUPERSIZE=9124708352
METADATASIZE=65536

system=system$SLOT
vendor=vendor$SLOT
odm=odm$SLOT
product=product$SLOT
system_ext=system_ext$SLOT

system1=system$SLOT1
vendor1=vendor$SLOT1
odm1=odm$SLOT1
product1=product$SLOT1
system_ext1=system_ext$SLOT1

echo " "
echo " "
echo "Input Raw Super image name :"
read
imgname=$REPLY
echo " "
while true; do
    read -p "Your super raw img name is : $imgname is that correct? (Y/N)" yn
    case $yn in
        [Yy]* ) break;;
        [Nn]* ) exit;;
        * ) echo "Please answer yes or no.";;
    esac
done

echo " "
echo "Input odm raw image size in bytes :"
read
ODMSIZE=$REPLY
echo " "

echo "Input product raw image size in bytes :"
read
PRODUCTSIZE=$REPLY
echo " "

echo "Input system raw image size in bytes :"
read
SYSTEMSIZE=$REPLY
echo " "

echo "Input system_ext raw image size in bytes :"
read
SYSEXTSIZE=$REPLY
echo " "

echo "Input vendor raw image size in bytes :"
read
VENDORSIZE=$REPLY
echo " "

echo "your odm raw image size is : $ODMSIZE"
echo "your product raw image size is : $PRODUCTSIZE"
echo "your system raw image size is : $SYSTEMSIZE"
echo "your system_ext raw image size is : $SYSEXTSIZE"
echo "your vendor raw image size is : $VENDORSIZE"
echo " "
while true; do
    read -p "Are those partitions size above correct? (Y/N)" yn
    case $yn in
        [Yy]* ) break;;
        [Nn]* ) exit;;
        * ) echo "Please answer yes or no.";;
    esac
done

echo " "

while true; do
    read -p "Are you compiling super.img of A/B device? (Y/N)" yn
    case $yn in
        [Yy]* ) 
echo " "
echo " "
echo "Compiling super with A/B format"
echo " "
echo " "

touch $DIRSUPER/system_b.img
touch $DIRSUPER/vendor_b.img
touch $DIRSUPER/odm_b.img
touch $DIRSUPER/product_b.img
touch $DIRSUPER/system_ext_b.img

./bin/lpmake --metadata-size $METADATASIZE --super-name super --metadata-slots 2 --device super:$SUPERSIZE --group qti_dynamic_partitions:$SUPERSIZE --partition $system:none:$SYSTEMSIZE:qti_dynamic_partitions --image $system=$DIRSUPER/$system.img --partition $system_ext:none:$SYSEXTSIZE:qti_dynamic_partitions --image $system_ext=$DIRSUPER/$system_ext.img --partition $odm:none:$ODMSIZE:qti_dynamic_partitions --image $odm=$DIRSUPER/$odm.img --partition $vendor:none:$VENDORSIZE:qti_dynamic_partitions --image $vendor=$DIRSUPER/$vendor.img --partition $product:none:$PRODUCTSIZE:qti_dynamic_partitions --image $product=$DIRSUPER/$product.img --partition $system1:none:1:qti_dynamic_partitions --image $system1=$DIRSUPER/$system1.img --partition $system_ext1:none:1:qti_dynamic_partitions --image $system_ext1=$DIRSUPER/$system_ext1.img --partition $odm1:none:1:qti_dynamic_partitions --image $odm1=$DIRSUPER/$odm1.img --partition $vendor1:none:1:qti_dynamic_partitions --image $vendor1=$DIRSUPER/$vendor1.img --partition $product1:none:1:qti_dynamic_partitions --image $product1=$DIRSUPER/$product1.img --output $DIRIN/$imgname.img



break;;


        [Nn]* ) 
echo " "
echo " "
echo "Compiling super with A only format"
echo " "
echo " "

./bin/lpmake --metadata-size $METADATASIZE --super-name super --metadata-slots 2 --device super:$SUPERSIZE --group qti_dynamic_partitions:$SUPERSIZE --partition system:none:$SYSTEMSIZE:qti_dynamic_partitions --image system=$DIRSUPER/system.img --partition system_ext:none:$SYSEXTSIZE:qti_dynamic_partitions --image system_ext=$DIRSUPER/system_ext.img --partition odm:none:$ODMSIZE:qti_dynamic_partitions --image odm=$DIRSUPER/odm.img --partition vendor:none:$VENDORSIZE:qti_dynamic_partitions --image vendor=$DIRSUPER/vendor.img --partition product:none:$PRODUCTSIZE:qti_dynamic_partitions --image product=$DIRSUPER/product.img --output $DIRIN/$imgname.img



break;;


        * ) echo "Please answer yes or no.";;
    esac
done

rm -rf $DIRSUPER/*

echo " "
while true; do
    read -p "Continue compressing to $imgname.new.dat? (Y/N)" yn
    case $yn in
        [Yy]* ) break;;
        [Nn]* ) 
        
cp $DIRIN/$imgname.img $DIROUT/$imgname.img
rm -rf $DIRIN/$imgname.img  
exit;;
        * ) echo "Please answer yes or no.";;
    esac
done
echo " "

img2simg $DIRIN/$imgname.img $DIRIN/$imgname.sparse.img

./bin/img2sdat.py $DIRIN/$imgname.sparse.img -o $DIRIN/ -v 4
cp $DIRIN/system.new.dat $DIROUT/$imgname.new.dat
cp $DIRIN/system.patch.dat $DIROUT/$imgname.patch.dat
cp $DIRIN/system.transfer.list $DIROUT/$imgname.transfer.list
rm -rf $DIRIN/system.*
rm -rf $DIRIN/$imgname.*

echo " "
echo " "
echo " "
while true; do
    read -p "Compress $imgname.new.dat to $imgname.new.dat.br using brotli? (Y/N)" yn
    case $yn in
        [Yy]* ) break;;
        [Nn]* ) exit;;
        * ) echo "Please answer yes or no.";;
    esac
done


echo " "
echo " "
echo "Input Brotli compression level (0-11) :"
read
COMPLVL=$REPLY
echo " "
while true; do
    read -p "Your preffered brotli compression level is $COMPLVL is that correct? (Y/N)" yn
    case $yn in
        [Yy]* ) break;;
        [Nn]* ) exit;;
        * ) echo "Please answer yes or no.";;
    esac
done

echo " "

echo " " 
echo "compressing to $imgname.new.dat.br..."

brotli -q $COMPLVL $DIROUT/$imgname.new.dat --output=$DIROUT/$imgname.new.dat.br

echo "cleaning..."
echo " "

rm -rf $DIROUT/$imgname.new.dat

echo "compession done!";
echo " "



