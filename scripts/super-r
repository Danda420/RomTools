#!/bin/bash

cd ..
DIRTOOLS=$PWD
cd scripts
DIRIN=$DIRTOOLS/rom_input
DIROUT=$DIRTOOLS/rom_output
DIRSUPER=$DIRTOOLS/ROM/super
SIZEPART=$DIRTOOLS/size

SLOT=_a
SLOT1=_b

SUPERSIZE=9124708352
METADATASIZE=65536

system=system$SLOT
vendor=vendor$SLOT
odm=odm$SLOT
product=product$SLOT
system_ext=system_ext$SLOT

system1=system$SLOT1
vendor1=vendor$SLOT1
odm1=odm$SLOT1
product1=product$SLOT1
system_ext1=system_ext$SLOT1

clear

while true; do
    echo "Take partition size from $SIZEPART or just input manually?"
    echo "(1) Take from $SIZEPART"
    echo "(2) Input manually "
    read -p "choose 1 or 2 : " choose
    case $choose in
        [1]* ) 

ODMSIZE=$(cat $SIZEPART/odm)
PRODUCTSIZE=$(cat $SIZEPART/product)
SYSTEMSIZE=$(cat $SIZEPART/system)
SYSEXTSIZE=$(cat $SIZEPART/system_ext)
VENDORSIZE=$(cat $SIZEPART/vendor)
echo " "
echo "imported partition sizes from $SIZEPART"
echo " "
echo "here's your partitions size, if the size below is empty.. you need to input your partition size in bytes on $SIZEPART"

break;;


        [2]* ) 
        
echo " "
echo "Input odm raw image size in bytes :"
read
ODMSIZE=$REPLY
echo " "

echo "Input product raw image size in bytes :"
read
PRODUCTSIZE=$REPLY
echo " "

echo "Input system raw image size in bytes :"
read
SYSTEMSIZE=$REPLY
echo " "

echo "Input system_ext raw image size in bytes :"
read
SYSEXTSIZE=$REPLY
echo " "

echo "Input vendor raw image size in bytes :"
read
VENDORSIZE=$REPLY
echo " "


break;;


        * ) echo "Please answer 1 or 2.";;
    esac
done

echo " "
echo "your odm raw image size is : $ODMSIZE"
echo "your product raw image size is : $PRODUCTSIZE"
echo "your system raw image size is : $SYSTEMSIZE"
echo "your system_ext raw image size is : $SYSEXTSIZE"
echo "your vendor raw image size is : $VENDORSIZE"
echo " "
while true; do
    read -p "Are those partitions size above correct? (Y/N)" yn
    case $yn in
        [Yy]* ) break;;
        [Nn]* ) exit;;
        * ) echo "Please answer yes or no.";;
    esac
done

echo " "

echo " "
echo " "
echo "Input Raw Super image name :"
read
imgname=$REPLY
echo " "
while true; do
    read -p "Your super raw img name is : $imgname is that correct? (Y/N)" yn
    case $yn in
        [Yy]* ) break;;
        [Nn]* ) exit;;
        * ) echo "Please answer yes or no.";;
    esac
done

while true; do
    echo "What super partition type that u want to compile?"
    echo "(1) A only"
    echo "(2) Virtual A/B "
    read -p "choose 1 or 2 : " choose
    case $choose in
        [1]* ) 
echo " "
echo " "
echo "Compiling super with A only format"
echo " "
echo " "


./bin/lpmake 	--metadata-size $METADATASIZE --super-name super --metadata-slots 2 --device super:$SUPERSIZE \
		--group qti_dynamic_partitions:$SUPERSIZE \
		--partition system:none:$SYSTEMSIZE:qti_dynamic_partitions --image system=$DIRSUPER/system.img \
		--partition system_ext:none:$SYSEXTSIZE:qti_dynamic_partitions --image system_ext=$DIRSUPER/system_ext.img \
		--partition odm:none:$ODMSIZE:qti_dynamic_partitions --image odm=$DIRSUPER/odm.img \
		--partition vendor:none:$VENDORSIZE:qti_dynamic_partitions --image vendor=$DIRSUPER/vendor.img \
		--partition product:none:$PRODUCTSIZE:qti_dynamic_partitions --image product=$DIRSUPER/product.img \
		--sparse --output $DIRIN/$imgname.img


break;;


        [2]* ) 
echo " "
echo " "
echo "Compiling super with Virtual A/B format"
echo " "
echo " "

./bin/lpmake 	--metadata-size $METADATASIZE --virtual-ab --super-name super --metadata-slots 2 --device super:$SUPERSIZE \
		--group qti_dynamic_partitions:$SUPERSIZE \
		--partition $system:none:$SYSTEMSIZE:qti_dynamic_partitions --image $system=$DIRSUPER/$system.img \
		--partition $system_ext:none:$SYSEXTSIZE:qti_dynamic_partitions --image $system_ext=$DIRSUPER/$system_ext.img \		--partition $odm:none:$ODMSIZE:qti_dynamic_partitions --image $odm=$DIRSUPER/$odm.img \
		--partition $vendor:none:$VENDORSIZE:qti_dynamic_partitions --image $vendor=$DIRSUPER/$vendor.img \
		--partition $product:none:$PRODUCTSIZE:qti_dynamic_partitions --image $product=$DIRSUPER/$product.img \
		--sparse --output $DIRIN/$imgname.img


break;;


        * ) echo "Please answer 1 or 2.";;
    esac
done

rm -rf $DIRSUPER/*

echo " "
while true; do
    read -p "Continue compressing to $imgname.new.dat? (Y/N)" yn
    case $yn in
        [Yy]* ) break;;
        [Nn]* ) 
        
mv $DIRIN/$imgname.img $DIROUT/$imgname.img
exit;;
        * ) echo "Please answer yes or no.";;
    esac
done
echo " "

img2simg $DIRIN/$imgname.img $DIRIN/$imgname.sparse.img
rm -rf $DIRIN/$imgname.img

./bin/img2sdat.py $DIRIN/$imgname.sparse.img -o $DIRIN/ -v 4
mv $DIRIN/system.new.dat $DIROUT/$imgname.new.dat
mv $DIRIN/system.patch.dat $DIROUT/$imgname.patch.dat
mv $DIRIN/system.transfer.list $DIROUT/$imgname.transfer.list
rm -rf $DIRIN/$imgname.*

echo " "
echo " "
echo " "
while true; do
    read -p "Compress $imgname.new.dat to $imgname.new.dat.br using brotli? (Y/N)" yn
    case $yn in
        [Yy]* ) break;;
        [Nn]* ) exit;;
        * ) echo "Please answer yes or no.";;
    esac
done


echo " "
echo " "
echo "Input Brotli compression level (0-11) :"
read
COMPLVL=$REPLY
echo " "
while true; do
    read -p "Your preffered brotli compression level is $COMPLVL is that correct? (Y/N)" yn
    case $yn in
        [Yy]* ) break;;
        [Nn]* ) exit;;
        * ) echo "Please answer yes or no.";;
    esac
done

echo " "

echo " " 
echo "compressing to $imgname.new.dat.br..."

brotli -q $COMPLVL $DIROUT/$imgname.new.dat --output=$DIROUT/$imgname.new.dat.br

echo "cleaning..."
echo " "

rm -rf $DIROUT/$imgname.new.dat

echo "compession done!";
echo " "



