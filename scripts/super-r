#!/bin/bash

DIRTOOLS=$PWD
DIRIN=$DIRTOOLS/rom_input
DIROUT=$DIRTOOLS/rom_output
DIRSUPER=$DIRTOOLS/ROM/super

SLOT=_a

SUPERSIZE=9124708352
METADATASIZE=65536

system=system$SLOT
vendor=vendor$SLOT
odm=odm$SLOT
product=product$SLOT
system_ext=system_ext$SLOT

clear
cd scripts

echo " "
echo "Input Raw Super image name :"
read
imgname=$REPLY
echo " "
while true; do
    read -p "Your super raw img name is : $imgname is that correct? (Y/N)" yn
    case $yn in
        [Yy]* ) break;;
        [Nn]* ) exit;;
        * ) echo "Please answer yes or no.";;
    esac
done

while true; do
    echo "What super partition type that u want to compile?"
    echo "(1) A only"
    echo "(2) Virtual A/B "
    read -p "choose 1 or 2 : " choose
    case $choose in
        [1]* ) 
echo " "
echo " "
echo "Compiling super with A only format"
echo " "
echo " "

ODMSIZE=$(ls -nl $DIRSUPER/odm.img | awk '{print $5}')
PRODUCTSIZE=$(ls -nl $DIRSUPER/product.img | awk '{print $5}')
SYSTEMSIZE=$(ls -nl $DIRSUPER/system.img | awk '{print $5}')
SYSEXTSIZE=$(ls -nl $DIRSUPER/system_ext.img | awk '{print $5}')
VENDORSIZE=$(ls -nl $DIRSUPER/vendor.img | awk '{print $5}')
echo " "
echo "Compiling super : $imgname.img (raw)..."
./bin/lpmake 	--metadata-size $METADATASIZE --metadata-slots 2 --super-name super \
		--device super:$SUPERSIZE \
	    	--group qti_dynamic_partitions:$SUPERSIZE \
		--partition system:none:$SYSTEMSIZE:qti_dynamic_partitions \
		--image system=$DIRSUPER/system.img \
		--partition system_ext:none:$SYSEXTSIZE:qti_dynamic_partitions \
		--image system_ext=$DIRSUPER/system_ext.img \
		--partition odm:none:$ODMSIZE:qti_dynamic_partitions \
		--image odm=$DIRSUPER/odm.img \
		--partition vendor:none:$VENDORSIZE:qti_dynamic_partitions \
		--image vendor=$DIRSUPER/vendor.img \
		--partition product:none:$PRODUCTSIZE:qti_dynamic_partitions \
		--image product=$DIRSUPER/product.img \
		--output $DIRIN/$imgname.img  >> log.txt


break;;


        [2]* ) 
echo " "
echo " "
echo "Compiling super with Virtual A/B format"
echo " "
echo " "

ODMSIZE=$(ls -nl $DIRSUPER/$odm.img | awk '{print $5}')
PRODUCTSIZE=$(ls -nl $DIRSUPER/$product.img | awk '{print $5}')
SYSTEMSIZE=$(ls -nl $DIRSUPER/$system.img | awk '{print $5}')
SYSEXTSIZE=$(ls -nl $DIRSUPER/$system_ext.img | awk '{print $5}')
VENDORSIZE=$(ls -nl $DIRSUPER/$vendor.img | awk '{print $5}')
echo " "
echo "Compiling super : $imgname.img (raw)..."
./bin/lpmake 	--metadata-size $METADATASIZE --metadata-slots 2 --virtual-ab --super-name super \
		--device super:$SUPERSIZE \
		--group qti_dynamic_partitions:$SUPERSIZE \
		--partition $system:none:$SYSTEMSIZE:qti_dynamic_partitions \
		--image $system=$DIRSUPER/$system.img \
		--partition $system_ext:none:$SYSEXTSIZE:qti_dynamic_partitions \
		--image $system_ext=$DIRSUPER/$system_ext.img \		
		--partition $odm:none:$ODMSIZE:qti_dynamic_partitions \
		--image $odm=$DIRSUPER/$odm.img \
		--partition $vendor:none:$VENDORSIZE:qti_dynamic_partitions \
		--image $vendor=$DIRSUPER/$vendor.img \
		--partition $product:none:$PRODUCTSIZE:qti_dynamic_partitions \
		--image $product=$DIRSUPER/$product.img \
		--output $DIRIN/$imgname.img  >> log.txt


break;;


        * ) echo "Please answer 1 or 2.";;
    esac
done

rm -rf $DIRSUPER/*

echo " "
while true; do
    read -p "Continue compressing to $imgname.new.dat? (Y/N)" yn
    case $yn in
        [Yy]* ) break;;
        [Nn]* ) 
        
mv $DIRIN/$imgname.img $DIROUT/$imgname.img
exit;;
        * ) echo "Please answer yes or no.";;
    esac
done
echo " "

echo " "
echo "Converting raw $imgname.img to sparse..."
img2simg $DIRIN/$imgname.img $DIRIN/$imgname.sparse.img >> log.txt
rm -rf $DIRIN/$imgname.img

echo " "
echo "Converting $imgname.img (sparse) to $imgname.new.dat..."
./bin/img2sdat.py $DIRIN/$imgname.sparse.img -o $DIRIN/ -v 4 >> log.txt
rm -rf $DIRIN/$imgname.*
mv $DIRIN/system.new.dat $DIROUT/$imgname.new.dat
mv $DIRIN/system.patch.dat $DIROUT/$imgname.patch.dat
mv $DIRIN/system.transfer.list $DIROUT/$imgname.transfer.list
rm -rf $DIRIN/$imgname.*

echo " "
echo " "
echo " "
while true; do
    read -p "Compress $imgname.new.dat to $imgname.new.dat.br using brotli? (Y/N)" yn
    case $yn in
        [Yy]* ) break;;
        [Nn]* ) exit;;
        * ) echo "Please answer yes or no.";;
    esac
done


echo " "
echo " "
echo "Input Brotli compression level (0-11) :"
read
COMPLVL=$REPLY
echo " "
while true; do
    read -p "Your preffered brotli compression level is $COMPLVL is that correct? (Y/N)" yn
    case $yn in
        [Yy]* ) break;;
        [Nn]* ) exit;;
        * ) echo "Please answer yes or no.";;
    esac
done

echo " "

echo " " 
echo "Compressing to $imgname.new.dat.br..."

brotli -q $COMPLVL $DIROUT/$imgname.new.dat --output=$DIROUT/$imgname.new.dat.br

echo "cleaning..."
echo " "

rm -rf $DIROUT/$imgname.new.dat

echo "compession done! Output : $DIROUT"



