#!/bin/sh

DIRTOOLS=$PWD
DIRIN=$DIRTOOLS/rom_input
DIROUT=$DIRTOOLS/rom_output
dynamic_part_op_list=$DIROUT/dynamic_partitions_op_list
clear
cd scripts

ODMSIZE=$(ls -nl $DIRIN/odm.img | awk '{print $5}')
PRODUCTSIZE=$(ls -nl $DIRIN/product.img | awk '{print $5}')
SYSTEMSIZE=$(ls -nl $DIRIN/system.img | awk '{print $5}')
SYSEXTSIZE=$(ls -nl $DIRIN/system_ext.img | awk '{print $5}')
VENDORSIZE=$(ls -nl $DIRIN/vendor.img | awk '{print $5}')
SUPERSIZE=9124708352


a_dp_op_list() {
	if [ -f $dynamic_part_op_list ]; then
		rm -f $dynamic_part_op_list;
	fi;
	
	touch $DIROUT/dynamic_partitions_op_list
	echo "# Remove all existing dynamic partitions and groups before applying full OTA" >> $dynamic_part_op_list
	echo "remove_all_groups" >>  $dynamic_part_op_list
	echo "# Add group qti_dynamic_partitions with maximum size $SUPERSIZE" >>  $dynamic_part_op_list
	echo "add_group qti_dynamic_partitions $SUPERSIZE" >>  $dynamic_part_op_list
	echo "# Add partition system to group qti_dynamic_partitions" >>  $dynamic_part_op_list
	echo "add system qti_dynamic_partitions" >>  $dynamic_part_op_list
	echo "# Add partition vendor to group qti_dynamic_partitions" >>  $dynamic_part_op_list
	echo "add vendor qti_dynamic_partitions" >>  $dynamic_part_op_list
	echo "# Add partition product to group qti_dynamic_partitions" >>  $dynamic_part_op_list
	echo "add product qti_dynamic_partitions" >>  $dynamic_part_op_list
	echo "# Add partition odm to group qti_dynamic_partitions" >>  $dynamic_part_op_list
	echo "add odm qti_dynamic_partitions" >>  $dynamic_part_op_list
	echo "# Add partition system_ext to group qti_dynamic_partitions" >>  $dynamic_part_op_list
	echo "add system_ext qti_dynamic_partitions" >>  $dynamic_part_op_list
	echo "# Grow partition system from 0 to $SYSTEMSIZE" >>  $dynamic_part_op_list
	echo "resize system $SYSTEMSIZE" >>  $dynamic_part_op_list
	echo "# Grow partition vendor from 0 to $VENDORSIZE" >>  $dynamic_part_op_list
	echo "resize vendor $VENDORSIZE" >>  $dynamic_part_op_list
	echo "# Grow partition product from 0 to $PRODUCTSIZE" >>  $dynamic_part_op_list
	echo "resize product $PRODUCTSIZE" >>  $dynamic_part_op_list
	echo "# Grow partition odm from 0 to $ODMSIZE" >>  $dynamic_part_op_list
	echo "resize odm $ODMSIZE" >>  $dynamic_part_op_list
	echo "# Grow partition system_ext from 0 to $SYSEXTSIZE" >>  $dynamic_part_op_list
	echo "resize system_ext $SYSEXTSIZE" >>  $dynamic_part_op_list
}

ab_dp_op_list() {
	if [ -f $dynamic_part_op_list ]; then
		rm -f $dynamic_part_op_list;
	fi;
	
	touch $DIROUT/dynamic_partitions_op_list
	echo "# Remove all existing dynamic partitions and groups before applying full OTA" >> $dynamic_part_op_list
	echo "remove_all_groups" >> $dynamic_part_op_list
	echo "# Add group qti_dynamic_partitions_a with maximum size $SUPERSIZE" >> $dynamic_part_op_list
	echo "add_group qti_dynamic_partitions_a $SUPERSIZE" >> $dynamic_part_op_list
	echo "# Add group qti_dynamic_partitions_b with maximum size $SUPERSIZE" >> $dynamic_part_op_list
	echo "add_group qti_dynamic_partitions_b $SUPERSIZE" >> $dynamic_part_op_list
	echo "# Add partition system_a to group qti_dynamic_partitions_a" >> $dynamic_part_op_list
	echo "add system_a qti_dynamic_partitions_a" >> $dynamic_part_op_list
	echo "# Add partition system_b to group qti_dynamic_partitions_b" >> $dynamic_part_op_list
	echo "add system_b qti_dynamic_partitions_b" >> $dynamic_part_op_list
	echo "# Add partition system_ext_a to group qti_dynamic_partitions_a" >> $dynamic_part_op_list
	echo "add system_ext_a qti_dynamic_partitions_a" >> $dynamic_part_op_list
	echo "# Add partition system_ext_b to group qti_dynamic_partitions_b" >> $dynamic_part_op_list
	echo "add system_ext_b qti_dynamic_partitions_b" >> $dynamic_part_op_list
	echo "# Add partition product_a to group qti_dynamic_partitions_a" >> $dynamic_part_op_list
	echo "add product_a qti_dynamic_partitions_a" >> $dynamic_part_op_list
	echo "# Add partition product_b to group qti_dynamic_partitions_b" >> $dynamic_part_op_list
	echo "add product_b qti_dynamic_partitions_b" >> $dynamic_part_op_list
	echo "# Add partition vendor_a to group qti_dynamic_partitions_a" >> $dynamic_part_op_list
	echo "add vendor_a qti_dynamic_partitions_a" >> $dynamic_part_op_list
	echo "# Add partition vendor_b to group qti_dynamic_partitions_b" >> $dynamic_part_op_list
	echo "add vendor_b qti_dynamic_partitions_b" >> $dynamic_part_op_list
	echo "# Add partition odm_a to group qti_dynamic_partitions_a" >> $dynamic_part_op_list
	echo "add odm_a qti_dynamic_partitions_a" >> $dynamic_part_op_list
	echo "# Add partition odm_b to group qti_dynamic_partitions_b" >> $dynamic_part_op_list
	echo "add odm_b qti_dynamic_partitions_b" >> $dynamic_part_op_list
	echo "# Grow partition system_a from 0 to $SYSTEMSIZE" >> $dynamic_part_op_list
	echo "resize system_a $SYSTEMSIZE" >> $dynamic_part_op_list
	echo "# Grow partition system_ext_a from 0 to $SYSEXTSIZE" >> $dynamic_part_op_list
	echo "resize system_ext_a $SYSEXTSIZE" >> $dynamic_part_op_list
	echo "# Grow partition product_a from 0 to $PRODUCTSIZE" >> $dynamic_part_op_list
	echo "resize product_a $PRODUCTSIZE" >> $dynamic_part_op_list
	echo "# Grow partition vendor_a from 0 to $VENDORSIZE" >> $dynamic_part_op_list
	echo "resize vendor_a $VENDORSIZE" >> $dynamic_part_op_list
	echo "# Grow partition odm_a from 0 to $ODMSIZE" >> $dynamic_part_op_list
	echo "resize odm_a $ODMSIZE" >> $dynamic_part_op_list
}

brotli_lvl() {
	echo " "
	echo "Input Brotli compression level (0-11) :"
	read
	COMPLVL=$REPLY
	echo " "
	while true; do
   		read -p "Your preffered brotli compression level is $COMPLVL is that correct? (Y/N)" yn
    		case $yn in
			[Yy]* ) break;;
			[Nn]* ) exit;;
			* ) echo "Please answer yes or no.";;
		    esac
		done
}

sparse() {
    if [[ -f $DIRIN/$partition.img ]]; then
	echo ""
	echo "converting $partition into sparse"
	img2simg $DIRIN/$partition.img $DIRIN/$partition.sparse.img >> log.txt
	rm -rf $DIRIN/$partition.img
    else
    	echo " "
    	echo "there's no $partition.img supplied! skipping..."
    fi
}

img2sdat() {
    if [[ -f $DIRIN/$partition.sparse.img ]]; then
	echo " "
	echo "converting $partition into new.dat"
	./bin/img2sdat.py $DIRIN/$partition.sparse.img -o $DIRIN/ -v 4 >> log.txt
	mv $DIRIN/system.new.dat $DIROUT/$partition.new.dat
	mv $DIRIN/system.patch.dat $DIROUT/$partition.patch.dat
	mv $DIRIN/system.transfer.list $DIROUT/$partition.transfer.list
	rm -rf $DIRIN/system.*
	rm -rf $DIRIN/$partition.*
    else
    	echo " "
    	echo "there's no $partition.sparse.img supplied! skipping..."
    fi
}

datbr() {
    if [[ -f $DIROUT/$partition.new.dat ]]; then
	echo " " 
	echo "compressing $partition using brotli..."
	brotli -q $COMPLVL $DIROUT/$partition.new.dat --output=$DIROUT/$partition.new.dat.br
	rm -rf $DIROUT/$partition.new.dat
    else
    	echo " "
    	echo "there's no $partition.new.dat supplied! skipping..."
    fi
}

compress() {
	echo ""
	echo "========================================="

	partition=system
	sparse
	partition=vendor
	sparse
	partition=odm
	sparse
	partition=product
	sparse
	partition=system_ext
	sparse

	echo " "
	echo "========================================="

	partition=system
	img2sdat
	partition=vendor
	img2sdat
	partition=odm
	img2sdat
	partition=product
	img2sdat
	partition=system_ext
	img2sdat

	echo " "
	echo "========================================="

	partition=system
	datbr
	partition=vendor
	datbr
	partition=odm
	datbr
	partition=product
	datbr
	partition=system_ext
	datbr

	echo " "
	echo "========================================="
	echo " "
	echo "Done! Output : $DIROUT"

}

TOTALSIZE=$(( $ODMSIZE + $PRODUCTSIZE + $SYSTEMSIZE + $SYSEXTSIZE + $VENDORSIZE ))

if (( $TOTALSIZE > $SUPERSIZE )); then
	echo "Total size of all partitions exceeds max super size, aborting..."
	echo "($TOTALSIZE/$SUPERSIZE)"
	echo ""
else
	echo "Splits total size :"
	echo "($TOTALSIZE/$SUPERSIZE)"
	echo ""
	while true; do
	    echo "Compiling for A only device or Virtual A/B?"
	    echo "(1) A only"
	    echo "(2) Virtual A/B "
	    read -p "choose 1 or 2 : " choose
	    case $choose in
		[1]* ) 
	echo "Make sure to input your raw .img's to rom_input folder"
	echo " "
	echo "Compiling splits with A only format"
	echo " "

	brotli_lvl
	a_dp_op_list
	compress
	break;;


		[2]* ) 
	echo "Make sure to input your raw .img's to rom_input folder"
	echo " "
	echo "Compiling splits with Virtual A/B format"
	echo " "

	brotli_lvl
	ab_dp_op_list
	compress
	break;;


		* ) echo "Please answer 1 or 2.";;
	    esac
	done
fi
